import React from "react";
import PropTypes from "prop-types";

import {
  Panel,
  PanelHeader,
  PanelHeaderBack,
  Div,
  Button,
  Text,
  ButtonGroup,
} from "@vkontakte/vkui";

import "./index.css";

const Step2 = ({ id, go, nextPlace }) => {
  console.log(nextPlace);
  let content = null;
  if (nextPlace === "sum") {
    content = (
      <ButtonGroup className="button-group" mode="vertical" gap="m" stretched>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={go}
          data-to="step1"
        >
          –ò–∑–º–µ–Ω–∏—Ç—å –õ–°
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={go}
          data-to="pay1"
        >
          –û–ø–ª–∞—Ç–∏—Ç—å
        </Button>
      </ButtonGroup>
    );
  }
  if (nextPlace === "payment") {
    content = (
      <ButtonGroup className="button-group" mode="vertical" gap="m" stretched>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={go}
          data-to="pay1"
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ò–∑–º–µ–Ω–∏—Ç—å –õ–°
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ù–∞–∑–∞–¥
        </Button>
      </ButtonGroup>
    );
  }
  if (nextPlace === "meters") {
    content = (
      <ButtonGroup className="button-group" mode="vertical" gap="m" stretched>
        <Button size="l" appearance="accent" stretched>
          –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ò–∑–º–µ–Ω–∏—Ç—å –õ–°
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="meters1"
        >
          –î–∞–ª—å—à–µ
        </Button>
      </ButtonGroup>
    );
  }
  if (nextPlace === "subscribe") {
    content = (
      <ButtonGroup className="button-group" mode="vertical" gap="m" stretched>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ò–∑–º–µ–Ω–∏—Ç—å –õ–°
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="subscribe1"
        >
          –î–∞–ª—å—à–µ
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ù–∞–∑–∞–¥
        </Button>
      </ButtonGroup>
    );
  }
  if (nextPlace === "download") {
    content = (
      <ButtonGroup className="button-group" mode="vertical" gap="m" stretched>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="step1"
        >
          –ò–∑–º–µ–Ω–∏—Ç—å –õ–°
        </Button>
        <Button
          size="l"
          appearance="accent"
          stretched
          onClick={(e) => go(e, nextPlace)}
          data-to="download"
        >
          –î–∞–ª—å—à–µ
        </Button>
      </ButtonGroup>
    );
  }

  return (
    <Panel id={id}>
      <PanelHeader before={<PanelHeaderBack onClick={go} data-to="menu" />}>
        –ú–æ–π –ì–∞–∑
      </PanelHeader>
      <Div className="menu-container">
        <Div className="msg center text">
          <Text>
            üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <span>–°–µ—Ä–≥–µ–π</span>!
          </Text>
          <Text>
            <div>–í–∞—à –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞:</div>
            <span>
              <b>123456789</b>
            </span>
          </Text>
          <Text>
            <div>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ:</div>
            <span>
              <b>90.0 ‚ÇΩ</b>
            </span>
          </Text>
        </Div>
        <div>{content}</div>
      </Div>
    </Panel>
  );
};

Step2.propTypes = {
  id: PropTypes.string.isRequired,
  go: PropTypes.func.isRequired,
};
export default Step2;
